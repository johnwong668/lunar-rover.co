
    <!-- AOS -->
    <script src="./javascripts/jquery-3.3.1.min.js"></script>
    <script src="./javascripts/jquery.validate.min.js"></script>
    <script src="./javascripts/additional-methods.min.js"></script>
    <script src="./javascripts/bootstrap.min.js"></script>
    <script src="./javascripts/aos.js"></script>
    <script>
        AOS.init({});

        function onPostContactUsMessageFail(error) {
            showMessageModal($('#contact-modal'), 'Contact Us', error);
        }

        function onPostContactUsMessageDone(data) {
            if (data.done) {
                showMessageModal($('#contact-modal'), 'Contact Us', 'Your message has been sent. Thank you.');
            }
            else if (data.error) {
                onPostContactUsMessageFail(data.error)
            }
            else {
                onPostContactUsMessageFail('Something went wrong! Please try again later.')
            }
        }

        function postContactUsMessage(form_data, success_cb, fail_cb) {
            $.post("process-contact", form_data)
                .done(function(data){
                    success_cb(data);
                })
                .fail(function(){
                    fail_cb();
                })
                .always(function(){
                    // TODO: hide progress indicator
                });
        }

        function showMessageModal(modal, title, message) {
            $(modal).find('.modal-title').html(title);
            $(modal).find('.modal-body').html('<p>'+message+'</p>');
            $(modal).modal('show');
        }

        $(document).ready(function(){
            $.fn.serializeFormJSON = function () {
                var o = {};
                var a = this.serializeArray();
                $.each(a, function () {
                    if (o[this.name]) {
                        if (!o[this.name].push) {
                            o[this.name] = [o[this.name]];
                        }
                        o[this.name].push(this.value || '');
                    } else {
                        o[this.name] = this.value || '';
                    }
                });
                return o;
            };

            $('.get-started').on('click', function(e) {
            	$('html, body').animate({
            		scrollTop: $('#feature-first').offset().top
            	}, 1200);
            });

            $.validator.addMethod("universalEmail", function(value, element) {
                return (this.optional( element )
                    || /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test( value ));
            }, 'Please enter a valid email address.');
            $('#contact-form').validate({
                rules: {
                    email: {
                        required: true,
                        universalEmail: true
                    }
                }
            });

            $('#contact-form').on('submit', function(e){
                e.preventDefault();
                if ($(this).valid()) {
                    postContactUsMessage($(this).serializeFormJSON(), onPostContactUsMessageDone, onPostContactUsMessageFail);                    
                }
            });
        });
    </script>
